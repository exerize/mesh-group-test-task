version: "3.8"

networks:
    internal:
        external: false

services:
    nginx:
        restart: unless-stopped
        build:
            context: ".."
            dockerfile: docker/dockerfiles/nginx/Dockerfile
        volumes:
            - "../public:/var/www/public"
            - "../storage:/var/www/storage"
            - "./dockerfiles/nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
        ports:
            - "80:80"
        networks:
            - internal

    redis:
        image: redis:5
        volumes:
            - ./volumes/redis_date:/data
        expose:
            - 6379
        networks:
            - internal

    db:
        image: mariadb:10
        restart: unless-stopped
        environment:
            MARIADB_PASSWORD: devpass
            MARIADB_USER: root
            MARIADB_DATABASE: devdb
            MARIADB_ROOT_PASSWORD: devpass
        volumes:
            - ./volumes/database/dbdata:/var/lib/mysql
        ports:
            - "5306:3306"
        networks:
            - internal

    rabbitmq:
        image: rabbitmq:3.9-management-alpine
        volumes:
            - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
        env_file:
            - ./env/rabbitmq.env
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - internal

    app:
        image: app
        restart: unless-stopped
        build:
            context: ".."
            dockerfile: docker/dockerfiles/app/Dockerfile
        depends_on:
            - db
            - redis
            - rabbitmq
        volumes:
            - "../public:/var/www/public"
            - "../storage:/var/www/storage"
            - "../.env:/var/www/.env"
        ports:
            - "9000:9000"
        networks:
            - internal

    worker:
        image: app
        restart: unless-stopped
        depends_on:
            - app
        environment:
            APP_NAME: 'Worker'
        volumes:
            - "../public:/var/www/public"
            - "../storage:/var/www/storage"
            - "../.env:/var/www/.env"
        command: php artisan queue:work --queue=default --timeout=3600 --tries=3
        networks:
            - internal

    echo-worker:
        image: app
        restart: unless-stopped
        depends_on:
            - app
        environment:
            APP_NAME: 'Echo Worker'
        volumes:
            - "../public:/var/www/public"
            - "../storage:/var/www/storage"
            - "../.env:/var/www/.env"
        command: php artisan queue:work --queue=event --timeout=3600 --tries=3
        networks:
            - internal

    scheduler:
        image: app
        restart: unless-stopped
        depends_on:
            - app
        environment:
            APP_NAME: 'Scheduler'
        volumes:
            - "../public:/var/www/public"
            - "../storage:/var/www/storage"
            - "../.env:/var/www/.env"
        command: php artisan schedule:work
        networks:
            - internal

    echo:
        restart: unless-stopped
        build:
            context: ".."
            dockerfile: docker/dockerfiles/echo/Dockerfile
        depends_on:
            - redis
        ports:
            - "6001:6001"
        networks:
            - internal
